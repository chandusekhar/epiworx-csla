<%@ CodeTemplate 
    Language="C#" 
    TargetLanguage="C#" 
    Src="../TemplateBase.cs" 
	Inherits="CodeSmith.Csla.TemplateBase" 
    Debug="False" 
    CompilerVersion="v3.5" 
	Description="Template description here." %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Epitec.Epilink.Business;
using Epitec.Epilink.Business.Security;
using Epitec.Epilink.Business.Service;
using Epitec.Epilink.Test.Helpers;

namespace Epitec.Epilink.Test.Helpers
{
    public class <%= ClassName %>TestHelper
    {
        public static <%= ClassName %> <%= ClassName %>Add()
        {
            var <%= StringUtil.ToCamelCase(ClassName) %> = <%= ClassName %>TestHelper.<%= ClassName %>New();

            <%= StringUtil.ToCamelCase(ClassName) %> = <%= ClassName %>Service.<%= ClassName %>Save(<%= StringUtil.ToCamelCase(ClassName) %>);

            return  <%= StringUtil.ToCamelCase(ClassName) %>;
        }

        public static <%= ClassName %> <%= ClassName %>New()
        {
            var  <%= StringUtil.ToCamelCase(ClassName) %> = <%= ClassName %>Service.<%= ClassName %>New();

            <%= StringUtil.ToCamelCase(ClassName) %>.Name = DataHelper.RandomString(50);

            return  <%= StringUtil.ToCamelCase(ClassName) %>;
        }
    }
}

